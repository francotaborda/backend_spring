###########################################################
######################### MySQL ###########################
###########################################################

#Data source 
#Indica el driver/lib para conectar java a mysql
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#Url donde esta el servicio de tu mysql y el nombre de la base de datos
#spring.datasource.url=jdbc:mysql://localhost:3306/mydatabase

#Usuario y contrasena para tu base de datos descrita en la linea anterior
#spring.datasource.username=root
#spring.datasource.password=root

#[Opcional]Imprime en tu consola las instrucciones hechas en tu base de datos.
#spring.jpa.show-sql = true

#[Opcional]Crea las tablas.
#spring.jpa.hibernate.ddl-auto=create



###########################################################
###################### Postgres ###########################
###########################################################


## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL url donde esta el servicio de tu mysql y el nombre de la base de datos
spring.datasource.url=jdbc:postgresql://localhost:5432/backend

#Usuario y contrasena para la base de datos descrita en la linea anterior
spring.datasource.username=postgres
spring.datasource.password=password

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

#[Opcional]Imprime en tu consola las instrucciones hechas en tu base de datos.
spring.jpa.show-sql = true

#[Opcional]drop n create table nuevamente, usado para testing y dev, comentar en produccion
# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto=create







